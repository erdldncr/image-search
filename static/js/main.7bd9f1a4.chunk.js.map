{"version":3,"sources":["components/navbar/Navbar.js","store/reducer.js","store/Context.js","components/image-results/ImageResults.js","components/search/Search.js","App.js","index.js"],"names":["Navbar","title","defaultState","url","api_key","images","open","currentImg","reducer","state","action","type","payload","console","log","AppContext","createContext","AppContextProvider","children","useReducer","dispatch","Provider","value","useGlobalContext","useContext","ImageResults","handleClose","actions","label","primary","onClick","length","GridList","cols","map","img","tags","subtitle","user","actionIcon","handleOpen","largeImageURL","color","src","alt","id","modal","onRequestClose","style","width","Search","useState","text","amount","searchItems","setSearchItems","onChangeHandles","e","target","name","innerHTML","axios","get","then","res","data","hits","catch","err","useEffect","onChange","floatingLabelText","fullWidth","primaryText","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bd9f1a4.chunk.js","sourcesContent":["import React from 'react'\nimport AppBar from 'material-ui/AppBar'\n\n\n const Navbar = () =>   <AppBar title='PixaBay Image Finder'/>  \n\n export default Navbar","export const defaultState={\nurl:'https://pixabay.com/api',\napi_key:'21568865-bcfa69eefbf26879c6939fcbf',\nimages:[],\nopen:false,\ncurrentImg:''\n}\n\nexport function reducer(state,action){\n\n    switch (action.type) {\n        case 'SEARCH_IMAGE':\n               \n         return {...state,images:action.payload}\n            break;\n\n        case 'RESET_IMAGE':\n            console.log('erdal')\n            return {...state,images:null}\n\n        case 'HANDLE_OPEN':\n            return {...state,open:true,currentImg:action.payload}  \n            case 'HANDLE_CLOSE':\n                return {...state,open:false}      \n        default:\n            break;\n            return state\n    }\n\n}\n","import { createContext, useContext, useReducer } from \"react\";\nimport {reducer,defaultState} from '../store/reducer'\nexport const AppContext=createContext()\n\nexport function AppContextProvider({children}){\n\n    const [state,dispatch]=useReducer(reducer,defaultState)\n\n    return(\n        <AppContext.Provider value={{...state,dispatch}} >\n            {children}\n        </AppContext.Provider>\n\n    )\n\n}\nexport const useGlobalContext=()=>{\n\n    return useContext(AppContext)\n}\n","import React from 'react'\nimport { useGlobalContext } from '../../store/Context'\nimport  { GridList, GridTile } from 'material-ui/GridList'\nimport IconButton from 'material-ui/IconButton'\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in'\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport { spacing } from 'material-ui/styles'\n\nexport default function ImageResults() {\n\n    const { images, open, dispatch, currentImg } = useGlobalContext()\n\n\n\n    const handleOpen = (img) => {\n\n        return dispatch({ type: 'HANDLE_OPEN', payload: img })\n    }\n\n    const handleClose = () => {\n        dispatch({ type: 'HANDLE_CLOSE' })\n    }\n        const actions = [\n            <FlatButton label=\"Close\" primary={true} onClick={handleClose} />\n        ];\n\n        if (images?.length > 0) {\n\n            return ( <>\n                    <GridList cols={3}>\n                        {images.map(img => (\n                            <GridTile\n                                title={img.tags}\n                                key={img.id}\n                                subtitle={\n                                    <span>\n                                        by <strong>{img.user}</strong>\n                                    </span>\n                                }\n                                actionIcon={\n                                    <IconButton onClick={() => handleOpen(img.largeImageURL)}>\n                                        <ZoomIn color=\"white\" />\n                                    </IconButton>\n                                }\n                            >\n                                <img src={img.largeImageURL} alt=\"\" />\n                            </GridTile>\n                        ))}\n                    </GridList>\n                    <Dialog\n                        actions={actions}\n                        modal={false}\n                        open={open}\n                        onRequestClose={handleClose}\n                    >\n                        <img src={currentImg} alt=\"\" style={{ width: '100%' }} />\n                    </Dialog>\n                </>\n            )\n        } else {\n            return (\n                <div>\n\n                </div>\n            )\n        }\n\n\n    }\n\n\n\n\n\n\n","import React, { useEffect, useState } from 'react'\nimport TextFiled from 'material-ui/TextField'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport ImageResults from '../image-results/ImageResults'\nimport axios from 'axios'\nimport {useGlobalContext} from '../../store/Context'\n\n\nexport default function Search() {\n    const[searchItems,setSearchItems]=useState({text:'',amount:15})\n    const {dispatch,url,api_key}=useGlobalContext()\n\n\n    const onChangeHandles=(e)=>{\n        if(e.target.name){\n            setSearchItems({...searchItems,[e.target.name]:e.target.value})\n        }else{\n            setSearchItems({...searchItems,amount:(+e.target.innerHTML)})\n        }\n       \n        axios.get(`${url}/?key=${api_key}&q=${\n           searchItems.text\n          }&image_type=photo&per_page=${searchItems.amount}&safesearch=true`\n        )\n        .then(res => \n            dispatch({type:'SEARCH_IMAGE',payload:res.data.hits})\n            )\n        .catch(err => console.log(err));\n\n  \n    }\n    useEffect(()=>{\n        if(searchItems.text===''){\n            dispatch({type:'RESET_IMAGE'})\n        }\n    },[searchItems.text])\n    return (\n        <div>\n            <TextFiled\n                name='text'\n                value={searchItems.text}\n                onChange={onChangeHandles}\n                floatingLabelText='Search For \n            Images'\n                fullWidth={true}\n            />\n            <SelectField\n                name=\"amount\"\n                floatingLabelText=\"Amount\"\n                value={searchItems.amount}\n                onChange={onChangeHandles}\n            >\n                <MenuItem value={5} primaryText=\"5\" />\n                <MenuItem value={10} primaryText=\"10\" />\n                <MenuItem value={15} primaryText=\"15\" />\n                <MenuItem value={30} primaryText=\"30\" />\n                <MenuItem value={50} primaryText=\"50\" />\n            </SelectField>\n            <br/>\n            <ImageResults/>\n        </div>\n    )\n}\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport Navbar from './components/navbar/Navbar';\nimport Search from './components/search/Search'\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider>\n          <div>\n          <Navbar/>\n          <Search/>\n          </div>\n      </MuiThemeProvider>\n\n    )\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport{ AppContextProvider} from './store/Context'\n\nReactDOM.render(\n \n  <AppContextProvider>\n    <App />\n  </AppContextProvider>\n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}